<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjw.system.mapper.DeptMapper">
  <resultMap id="BaseResultMap" type="com.cjw.system.model.Dept">
    <!--@mbg.generated-->
    <!--@Table dept-->
    <id column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <collection property="children" ofType="com.cjw.system.model.Dept" select="selectAllDeptTree" column="{parent_id=dept_id}"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    dept_id, dept_name, parent_id, order_num, create_time, modify_time
  </sql>

  <select id="selectAllDeptTree" resultMap="BaseResultMap">
    select
    dept_id, dept_name, parent_id, order_num, create_time, modify_time
    from dept
    <where>
      <choose>
        <when test="parent_id!=null">
          and parent_id = #{parent_id}
        </when>
        <otherwise>
          and parent_id = 0
        </otherwise>
      </choose>
    </where>
    order by order_num
  </select>

  <update id="swap">
    update dept as prev join dept as next
    on (prev.dept_id = #{currentId} and next.dept_id=#{swapId})
    or (prev.dept_id = #{swapId} and next.dept_id=#{currentId})
    set prev.order_num = next.order_num,next.order_num = prev.order_num
  </update>
</mapper>